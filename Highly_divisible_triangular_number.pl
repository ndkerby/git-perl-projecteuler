#!/usr/bin/perl
#
# Project Euler.net
# 
# PROBLEM 12:
#     The sequence of triangle numbers is generated by adding the natural 
#     numbers. So the 7th triangle number would be: 
#         1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. 
#     The first ten terms would be:
#         1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#
#     We can see that 28 is the first triangle number to have over five 
#     divisors.
#
#     What is the value of the first triangle number to have over five 
#     hundred divisors?
#
# ANSWER: 
#    The sum is: 233168
#
# @author
# Natalie Kerby :: ndkerby@gmail.com

my $found = 0;
my $n_triangle = 0;
my $max = 500;
my $high = 0;

while (!$found){
    $n_triangle+=500; 
    my $sum_triangle = 0;
    for (my $int = 0; $int <= $n_triangle; $int++)
    {
        $sum_triangle += $int;
    }
    #print "Triangle: " . $n_triangle . " Sum: " . $sum_triangle . "\n";
 
    my $total_divisors = number_divisors($sum_triangle);
    if( $total_divisors > $max)
    {
        print "Triangle: " . $n_triangle . " Sum: " . $sum_triangle . "\n";
        $found = 1;
    }
    if( $total_divisors > $high)
        {
            $high = $total_divisors;
        }
    print "Triangle: " . $n_triangle . " Sum: " . $sum_triangle . " Count: " . $total_divisors . " High: " . $high . "\n";
}

sub number_divisors{
    my ($triangle_sum ) = @_;
    my $count;
    for( my $int = 1; $int <= $triangle_sum; $int++)
    {
        if ( $triangle_sum%$int == 0 )
        {
            $count++;
        }
    }
    
    return $count; 
}